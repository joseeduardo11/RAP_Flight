managed implementation in class zbp_r_flight_jp_3 unique;
strict ( 2 );
with draft;

define behavior for ZR_FLIGHT_JP_3 alias Travel
persistent table /dmo/a_travel_d
draft table /dmo/d_travel_d
lock master
total etag LastChangedAt
authorization master ( global, instance )
etag master LocalLastChangedAt
{
  create;
  update;
  delete;

  field ( numbering : managed, readonly ) TravelUUID;
  field ( readonly ) TravelID, OverallStatus, TotalPrice, LocalCreatedAt, LocalCreatedBy, LocalLastChangedAt, LocalLastChangedBy, LastChangedAt;
  field ( mandatory ) CustomerID, AgencyID, BeginDate, EndDate, CurrencyCode;
  //  field ( features : instance ) BookingFee;

  action ( features : instance, authorization : update ) acceptTravel result [1] $self;
  action ( features : instance, authorization : update ) rejectTravel result [1] $self;
  action ( features : instance, authorization : update ) deductDiscount parameter ZA_Travel_Discount_JP result [1] $self { default function GetDefaultsForDeductDiscount; }
  internal action reCalcTotalPrice;

  determination setTravelNumber on save { create; }
  determination setStatusToOpen on modify { create; }
  determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  validation validateAgency on save { create; field AgencyID; }
  validation validateCustomer on save { create; field CustomerID; }
  validation validateDates on save { create; field BeginDate, EndDate; }


  determine action validateAgencyID { validation validateAgency; }
  determine action validateCustomerID { validation validateCustomer; }
  determine action validateDateRange { validation validateDates; }


  side effects
  {

  }

  draft action Resume with additional implementation;
  draft action Edit;
  draft action Activate optimized;
  draft action Discard;

  draft determine action Prepare
  {
    validation validateAgency;
    validation validateCustomer;
    validation validateDates;
  }

  mapping for /dmo/a_travel_d
    {
      AgencyID           = agency_id;
      BeginDate          = begin_date;
      BookingFee         = booking_fee;
      CurrencyCode       = currency_code;
      CustomerID         = customer_id;
      Description        = description;
      EndDate            = end_date;
      LastChangedAt      = last_changed_at;
      LocalCreatedAt     = local_created_at;
      LocalCreatedBy     = local_created_by;
      LocalLastChangedAt = local_last_changed_at;
      LocalLastChangedBy = local_last_changed_by;
      OverallStatus      = overall_status;
      TotalPrice         = total_price;
      TravelID           = travel_id;
      TravelUUID         = travel_uuid;
    }
}